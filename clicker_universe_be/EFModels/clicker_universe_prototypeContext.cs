// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace clicker_universe_be.EFModels
{
    public partial class clicker_universe_prototypeContext : DbContext
    {
        public clicker_universe_prototypeContext()
        {
        }

        public clicker_universe_prototypeContext(DbContextOptions<clicker_universe_prototypeContext> options)
            : base(options)
        {
        }

        public virtual DbSet<RefreshTokens> RefreshTokens { get; set; }
        public virtual DbSet<Users> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Latin1_General_CI_AS");

            modelBuilder.Entity<RefreshTokens>(entity =>
            {
                entity.Property(e => e.Created).HasColumnType("date");

                entity.Property(e => e.CreatedByIp)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Expires).HasColumnType("date");

                entity.Property(e => e.IdUser).HasColumnName("idUser");

                entity.Property(e => e.ReasonRevoked)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.ReplacedByToken)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Revoked).HasColumnType("date");

                entity.Property(e => e.RevokedByIp)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Token).IsRequired();

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.RefreshTokens)
                    .HasForeignKey(d => d.IdUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RefreshTokens_Users");
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.HasKey(e => e.IdUser);

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.PasswordHash).IsRequired();

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}